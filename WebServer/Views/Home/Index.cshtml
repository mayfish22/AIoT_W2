@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<button type="button" class="btn btn-primary" id="btnCSV">匯出CSV</button>

<button type="button" class="btn btn-success" id="btnPDF">匯出PDF</button>

@section Scripts{
<script>
    $(async()=>{
        // 為 CSV 下載按鈕設置點擊事件處理程序
        $(`#btnCSV`).on(`click`, async function(e) {
            // 調用 downloadBlob 函數，請求下載 CSV 檔案
            const result = await downloadBlob(`/Home/ExportCSV`);

            // 檢查請求的狀態碼是否為 200（成功）
            if (result.status == 200) {
                // 創建一個隱藏的 <a> 標籤以觸發下載
                const link = document.createElement('a');
                // 使用 URL.createObjectURL 創建一個指向 Blob 的 URL
                link.href = window.URL.createObjectURL(result.body);
                // 設置下載的檔案名稱
                link.download = result.filename;
                // 模擬點擊連結以觸發下載
                link.click();
                // 下載後撤銷對象 URL，釋放資源
                window.URL.revokeObjectURL(link.href);
            } else {
                // 如果請求失敗，顯示錯誤消息
                window.alert(`下載檔案發生錯誤：${result.message}`);
            }
        });

        // 為 PDF 下載按鈕設置點擊事件處理程序
        $(`#btnPDF`).on(`click`, async function(e) {
            // 調用 downloadBlob 函數，請求下載 PDF 檔案
            const result = await downloadBlob(`/Home/ExportPDF`);

            // 檢查請求的狀態碼是否為 200（成功）
            if (result.status == 200) {
                // 創建一個隱藏的 <a> 標籤以觸發下載
                const link = document.createElement('a');
                // 使用 URL.createObjectURL 創建一個指向 Blob 的 URL
                link.href = window.URL.createObjectURL(result.body);
                // 設置下載的檔案名稱
                link.download = result.filename;
                // 模擬點擊連結以觸發下載
                link.click();
                // 下載後撤銷對象 URL，釋放資源
                window.URL.revokeObjectURL(link.href);
            } else {
                // 如果請求失敗，顯示錯誤消息
                window.alert(`下載檔案發生錯誤：${result.message}`);
            }
        });
    });

    async function downloadBlob(url) {
        try {
            // 使用 fetch API 發送 GET 請求到指定的 URL
            const fetchResponse = await fetch(url, { method: 'get' });

            // 定義正則表達式，用於從 Content-Disposition 標頭中提取檔名
            const regexPattern = /filename\*?=\S*''([^;]*)/;
            let filename = ''; // 初始化檔名變數

            // 遍歷響應標頭，尋找 Content-Disposition 標頭
            fetchResponse.headers.forEach((value, name) => {
                // 檢查標頭名稱是否為 'content-disposition'（不區分大小寫）
                if (name.toLowerCase() === 'content-disposition') {
                    // 使用正則表達式匹配檔名
                    const match = value.match(regexPattern);
                    // 如果匹配成功，解碼檔名並賦值；否則保持空字串
                    filename = decodeURI(match ? match[1] : '');
                }
            });

            // 構建響應數據對象
            const responseData = {
                status: fetchResponse.status, // HTTP 狀態碼
                message: fetchResponse.status == 200 ? null : (await fetchResponse.text()), // 錯誤消息（如果有）
                body: fetchResponse.status == 200 ? (await fetchResponse.blob()) : null, // 響應的 Blob 數據（如果請求成功）
                filename: filename // 提取的檔名
            };

            // 返回響應數據對象
            return responseData;
        } catch (e) {
            // 捕獲異常並輸出到控制台
            console.log(e);
            return e; // 返回異常
        }
    }
</script>
}